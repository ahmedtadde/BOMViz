shiny::runApp()
?setNames
runApp()
c(1,2,3)
c(1,2,3) ->x
names(x) <- rep("gray", length(x))
x
helper.colormapper <- function(array, conditions){
colormap <- rep("gray85", length(array))
foreach( j = 1:length(conditions))%do%{
colormap[which(array %in% conditions[j])] <- COLORMAP[j]
}
names(colormap) <- array
return(colormap)
}
c(1,2,3,"a","b","z", 9, 11, 17) ->x
y <- c("a",17,2)
helper.colormapper(x,y)
library(shiny)
library(ggplot2)
library(plotly)
library(scales)
library(grid)
library(reshape2)
library(data.table)
library(foreach)
library(snow)
library(doSNOW)
registerDoSNOW(makeCluster(detectCores()))
library(doParallel)
registerDoParallel(makeCluster(detectCores()))
source("data/parser.R")
helper.colormapper(x,y)
COLORMAP <- c("#ff9800", "#9c27b0", "#e91e63")
helper.colormapper(x,y)
source('~/GITHUB/RShiny-BoxOfficeMojo-master/data/functions.R')
runApp()
install.packages("plotly")
runApp()
runApp()
runApp()
setwd("~/GITHUB/RShiny-BoxOfficeMojo-master")
runApp()
source('~/GITHUB/RShiny-BoxOfficeMojo-master/data/functions.R')
setwd("~/GITHUB/RShiny-BoxOfficeMojo-master")
runApp()
X <-
data.tabl(cars)
data.table(cars)
data.table(cars) -> x
x[speed>=15 & dist <=90,]
source('~/GITHUB/RShiny-BoxOfficeMojo-master/data/functions.R')
x$speed
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
