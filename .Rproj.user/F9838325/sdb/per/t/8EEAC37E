{
    "collab_server" : "",
    "contents" : "# Load libraries\n\nlibraries <- function(){\n  library(XML)\n  library(dplyr)\n  library(shiny)\n  library(ggplot2)\n  library(plotly)\n  library(scales)\n  library(grid)\n  library(reshape2)\n  library(data.table)\n  library(DT)\n  library(foreach)\n  options(warn=-1) # turn off unneccessary NON-EXISTING NA warnings in the code from XML library\n\n}\n# =========================================================================\n# function get_data_studio\n#\n# @description: calls scrape_table_studios to get studio data for all years from boxofficemojo\n# @return: dataframe of studios and movies\n# =========================================================================\nget_data_studios <- function() {\n    df <- data.frame(NULL)\n    for (year in seq(2000, 2014, by=1)) {\n        table <- scrape_table_studios(year)  # get data for each year\n        df <- rbind_list(df, table)  # bind to final dataframe\n    }\n    df <- df %>%\n        arrange(-YEAR, RANK)  # sort dataframe\n    return(data.table(df))\n}\n\n\n\n# =========================================================================\n# function get_data_oscars\n#\n# @description: get Oscar data for all years from boxofficemojo\n# @return: dataframe of Oscar movies\n# =========================================================================\nget_data_oscars <- function() {\n    url <- \"http://www.boxofficemojo.com/oscar/?sort=studio&order=ASC&p=.htm\"\n    colNames <- c(\"ROW\"=\"character\",\n                  \"YEAR\"=\"numeric\",\n                  \"MOVIE\"=\"character\",\n                  \"STUDIO\"=\"character\",\n                  \"BOXOFFICE\"=\"Currency\",\n                  \"NOMINATIONS\"=\"numeric\",\n                  \"WINS\"=\"numeric\",\n                  \"RELEASEDATE\"=\"character\")\n    \n    # get data\n    tables <- readHTMLTable(url, header=TRUE, stringsAsFactors=FALSE, colClasses=unname(colNames))\n    df <- tables[[4]]  # data is in the 4th table\n    \n    # reshape data\n    colnames(df) <- names(colNames)\n    df <- df %>%\n        select(-ROW) %>%\n        mutate(BOXOFFICE = round(BOXOFFICE / 1000000, 2),\n               WIN_PERCENTAGE = round(WINS / NOMINATIONS, 4)) %>%\n        arrange(-YEAR)\n    return(data.table(df))\n}\n\n\n\n# =========================================================================\n# function get_data_actors\n#\n# @description: calls scrape_people to get top 50 actors data from boxofficemojo\n# @return: dataframe of top 50 actors and movies\n# =========================================================================\nget_data_actors <- function() {\n    df <- scrape_people(\"Actor\")\n    return(data.table(df))\n}\n\n\n\n# =========================================================================\n# function get_data_directors\n#\n# @description: calls scrape_people to get top 50 directors data for all years from boxofficemojo\n# @return: dataframe of directors and movies\n# =========================================================================\nget_data_directors <- function() {\n    df <- scrape_people(\"Director\")\n    return(data.table(df))\n}\n\n\n\n# =========================================================================\n# function get_data_producers\n#\n# @description: calls scrape_people to get top 50 producers data for all years from boxofficemojo\n# @return: dataframe of producers and movies\n# =========================================================================\nget_data_producers <- function() {\n    df <- scrape_people(\"Producer\")\n    return(data.table(df))\n}\n\n\n\n# =========================================================================\n# helper function scrape_table_studios\n#\n# @description: scrapes the boxofficemojo website for studio data given a year input\n# @param year: integer year value\n# @return: dataframe of table\n# =========================================================================\nscrape_table_studios <- function(year) {\n    url <- sprintf(\"http://www.boxofficemojo.com/studio/?view=majorstudio&view2=yearly&yr=%s&p=.htm\", year)\n    colNames <- c(\"RANK\"=\"integer\",\n                  \"STUDIO\"=\"character\",\n                  \"MARKETSHARE\"=\"Percent\",\n                  \"BOXOFFICE\"=\"Currency\",\n                  \"MOVIES_COUNT\"=\"integer\",\n                  \"MOVIES_YEAR\"=\"integer\")\n    \n    # get data\n    tables <- readHTMLTable(url, header=TRUE, stringsAsFactors=FALSE, colClasses=unname(colNames))\n    df <- tables[[4]]  # data is in the 4th table\n    \n    \n    # reshape data\n    colnames(df) <- names(colNames)\n    df <- df %>%\n        mutate(YEAR = year) %>%\n        filter(RANK <= 10)  # limit data to top 10 studios\n    return(df)\n}\n\n\n\n# =========================================================================\n# helper function scrape_people\n#\n# @description: scrapes the boxofficemojo website for people data given a role input\n# @param role: string value\n# @return: dataframe of table\n# =========================================================================\nscrape_people <- function(role) {\n    url <- sprintf(\"http://www.boxofficemojo.com/people/?view=%s&sort=sumgross&order=DESC&p=.htm\", role)\n    colNames <- c(\"RANK\"=\"numeric\",\n                  \"PERSON\"=\"character\",\n                  \"TOTAL_BO\"=\"Currency\",\n                  \"MOVIES_COUNT\"=\"numeric\",\n                  \"AVERAGE_BO\"=\"Currency\",\n                  \"BEST_PICTURE\"=\"character\",\n                  \"BEST_BO\"=\"Currency\")\n    \n    # get data\n    tables <- readHTMLTable(url, header=TRUE, stringsAsFactors=FALSE, colClasses=unname(colNames))\n    df <- tables[[4]]  # data is in the 4th table\n    \n    # reshape data\n    colnames(df) <- names(colNames)\n    return(data.table(df))\n}",
    "created" : 1493411753977.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2432415978",
    "id" : "8EEAC37E",
    "lastKnownWriteTime" : 1493414620,
    "last_content_update" : 1493414620562,
    "path" : "~/GITHUB/RShiny-BoxOfficeMojo-master/data/functions.R",
    "project_path" : "data/functions.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}